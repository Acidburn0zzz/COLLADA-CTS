# Copyright (c) 2012 The Khronos Group Inc.
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and /or associated documentation files (the "Materials "), to deal in the Materials without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Materials, and to permit persons to whom the Materials are furnished to do so, subject to 
# the following conditions: 
# The above copyright notice and this permission notice shall be included 
# in all copies or substantial portions of the Materials. 
# THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.

import wx

import Core.Common.FUtils as FUtils
from Core.Gui.Dialog.FSettingsScrolledSizer import *

class FSettingDialog(wx.Dialog):
    def __init__(self, parent, testProcedure, applicationMap, editable, 
                 setting = None):
        wx.Dialog.__init__(self, parent, wx.ID_ANY, "Test Settings", 
                           size = (400, 400))
        
        self.__editable = editable
        self.__InitializeIds()
        
        outterSizer = wx.BoxSizer(wx.VERTICAL)
        self.SetSizer(outterSizer)
        
        self.__settingsSizer = FSettingsScrolledSizer(self, testProcedure, 
                applicationMap, setting, editable)
        outterSizer.Add(self.__settingsSizer, 1, wx.EXPAND | wx.ALL, 5)
        outterSizer.Add(self.__GetBottomSizer(), 0, wx.ALIGN_CENTER | wx.ALL, 
                        5)
    
    def __OnOk(self, e):
        """Call-back function when OK button is pressed.
            
        arguments:
            e -- the event generated by the OK button being pressed.
            
        """
        
        if (not self.__settingsSizer.IsSettingOk()): 
            FUtils.ShowWarning(self, "There's an invalid setting.")
            return
        
        if (self.IsModal()):
            self.EndModal(wx.ID_OK)
        else:
            self.SetReturnCode(wx.ID_OK)
            self.Show(False)
    
    def __OnCancel(self, e):
        """Call-back function when Cancel button is pressed.
        
        arguments:
            e -- the event generated by the Cancel button being pressed.
            
        """
        if (self.IsModal()):
            self.EndModal(wx.ID_CANCEL)
        else:
            self.SetReturnCode(wx.ID_CANCEL)
            self.Show(False)
    
    def __InitializeIds(self):
        """Gives the IDs for the events."""
        self.__ID_OK = wx.NewId()
        self.__ID_CANCEL = wx.NewId()
    
    def __GetBottomSizer(self):
        """Returns the Sizer used to confirm or cancel this dialog."""
        bottomSizer = wx.BoxSizer(wx.HORIZONTAL)
        
        okButton = wx.Button(self, self.__ID_OK, "Ok")
        okButton.Enable(self.__editable)
        self.Bind(wx.EVT_BUTTON, self.__OnOk, okButton, self.__ID_OK)
        
        cancelButton = wx.Button(self, self.__ID_CANCEL, "Cancel")
        self.Bind(wx.EVT_BUTTON, self.__OnCancel, cancelButton, 
                  self.__ID_CANCEL)
        
        bottomSizer.Add(okButton, 0, wx.ALIGN_LEFT)
        bottomSizer.Add(cancelButton, 0, wx.ALIGN_RIGHT)
        
        return bottomSizer
    
    def GetSettings(self):
        return self.__settingsSizer.GetSettings()
    
##from FTestProcedure import *
##class MainFrame(wx.MDIParentFrame):
##    def __init__(self, parent, id, title):
##        wx.MDIParentFrame.__init__(self, parent, id, title, size = (600, 480),
##                style = wx.DEFAULT_FRAME_STYLE | wx.NO_FULL_REPAINT_ON_RESIZE)
##        
##        run = [('3DSMax 7', [('Import', 'Default'), 
##                             ('Render', 'Default'),
##                             ('Export', 'Default')]), 
##               ('3DSMax 7', [('Import', 'Default'),
##                             ('Render', 'Default')])]
##        
##        dialog = FSettingsDialog(self, FTestProcedure(run), False)
##        dialog.ShowModal()
##    
##app = wx.PySimpleApp()
##frame = MainFrame(None,-1, "Test")
##app.MainLoop()
