struct vertout
{
	float4 HPosition : POSITION;
	float4 Color : COLOR;
	float2 UV : TEXCOORD0;
	float3 N : TEXCOORD1;
	float3 V : TEXCOORD2;
	float3 L : TEXCOORD3;
	float3 T : TEXCOORD4;
	float3 B : TEXCOORD5;
};

float4 main( vertout IN,
uniform float Kd = 1.0,
uniform float roughness = 0.06,
uniform float edginess = 0.1,
uniform float4 ambient,
uniform float4 sheen,
uniform float backScatter = 0.1,
uniform sampler2D normalMap ) : COLOR
{
	float3 NObj = 2.0*tex2D(normalMap, IN.UV).xyz - 1.0;
	

	float3 NWorld = normalize( NObj.x * IN.T + NObj.y * IN.B + NObj.z * IN.N );

	float3 N = normalize(IN.N);
	float3 V = normalize(IN.V);
	float3 L = normalize(IN.L);
	float3 H = normalize(V + L);

	float cosine = saturate ( dot(L,V) );
	float4 shiny = sheen * pow (cosine, 1.0/roughness) * backScatter;
	
	cosine = saturate( dot(V,NWorld) );
	float sine = sqrt (1.0- cosine*cosine);
	shiny += sheen * pow (sine, 1/edginess) * dot(L,NWorld);

	float4 Cs = IN.Color*saturate(dot(L,NWorld))*Kd + ambient  + shiny;
	Cs.a = 1;
	
	return Cs;
}