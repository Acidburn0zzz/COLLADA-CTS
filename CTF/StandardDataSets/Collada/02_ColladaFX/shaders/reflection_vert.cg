struct appin
{
	float4 P : POSITION;
	float3 N : NORMAL;
	float2 UV : TEXCOORD0;
	float3 T : TEXCOORD1;
	float3 B : TEXCOORD2;
};

struct vertout
{
	float4 HP : POSITION;
	float2 UV : TEXCOORD0;
	float3 N : TEXCOORD1;
	float3 T : TEXCOORD4;
	float3 B : TEXCOORD2;
	float3 V : TEXCOORD3;
};

vertout main( appin IN,
uniform float2 uvOffset,
uniform float4 eyePoint : LIGHTPOS0,
uniform float4x4 modelViewMatrix : VIEWPROJ,
uniform float4x4 w : WORLD,
uniform float4x4 wi : WORLDIT
)
{
	vertout OUT;
	
	OUT.HP = mul(modelViewMatrix, IN.P);
	
	OUT.UV.xy = IN.UV.xy + uvOffset.xy;
	
	float4 N = float4(IN.N.xyz,0);
	
	float4 T = float4(IN.T.xyz,0);
	
	float4 B = float4(IN.B.xyz,0);
	
	
	OUT.N = normalize(mul( w, N ).xyz);
	OUT.T = normalize(mul( w, T ).xyz);
	OUT.B = normalize(mul( w, B ).xyz);
	
	float4 PWorld = mul( w, IN.P );
	
	OUT.V = normalize(eyePoint.xyz - PWorld.xyz);


	return OUT;
}