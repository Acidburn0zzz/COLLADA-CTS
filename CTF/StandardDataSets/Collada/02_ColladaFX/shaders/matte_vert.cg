struct appin
{
	float4 Cs : COLOR0;
	float4 Pos : POSITION;
	float4 N : NORMAL;
	float2 Texcoord : TEXCOORD0;
	float3 T : TEXCOORD1;
	float3 B : TEXCOORD2;
};

struct vertout
{
	float4 HPosition : POSITION;
	float4 Color : COLOR;
	float2 UV : TEXCOORD0;
	float3 N : TEXCOORD1;
	float3 L : TEXCOORD3;
};

vertout main( appin IN,
uniform float4 lightPoint : LIGHTPOS1,
uniform float4x4 modelViewMatrix : WorldViewProjection,
uniform float4x4 worldXf : WORLD
 )
{
	vertout OUT;

	OUT.UV = IN.Texcoord;
	
	OUT.HPosition = mul(modelViewMatrix, IN.Pos);
	
	float4 P = mul(worldXf, IN.Pos);
	
	float4 L = lightPoint - P;
	
	OUT.L = normalize(L.xyz);

	OUT.Color.rgb = IN.Cs;
	
	float4 N = float4(IN.N.xyz,0);
	
	OUT.N = normalize(mul( worldXf, N ).xyz);

	return OUT;
}