struct vertout
{
	float4 HP : POSITION;
	float2 UV : TEXCOORD0;
	float3 N : TEXCOORD1;
	float3 T : TEXCOORD4;
	float3 B : TEXCOORD2;
	float3 V : TEXCOORD3;
};

float4 main( vertout IN,
uniform bool isRefr,
uniform float Kr,
uniform float3 coloration,
uniform sampler2D normalMap,
uniform samplerCUBE envMap
) : COLOR
{
	float3 NObj = 2.0*tex2D(normalMap, IN.UV).xyz - 1.0;
	
	
	
	float3 NWorld = normalize( NObj.x * IN.T + NObj.y * IN.B + NObj.z * IN.N );
	
	float3 refl = reflect(-IN.V, NWorld);

if(isRefr)	refl = refract(-IN.V, NWorld, 1.0/Kr);
	
	float4 fresnel = texCUBE( envMap, refl.xyz ) * ( 1 - dot(NWorld,IN.V) );

if(isRefr)
	fresnel = texCUBE( envMap, refl.xyz ) * dot(NWorld,IN.V)* dot(NWorld,IN.V);
	
	fresnel.xyz = fresnel.xyz * coloration;
	
	fresnel.a = 1;

	return fresnel;
}